cmake_minimum_required(VERSION 3.2)
project(MultiGrid)

if(NOT DIM)
  set(DIM "2")
endif()

# set(CMAKE_CXX_COMPILER "clang++")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas -Wno-unused-result -DDIM=${DIM}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
set(CMAKE_CXX_STANDARD 17)

option(DBGLEVEL "The verbosity. " -1)
if (DBGLEVEL GREATER -1)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDBGLEVEL=${DBGLEVEL}")
endif()

option(USE_OPENMP "Whether to use the OpenMP parallelism." OFF)
if (USE_OPENMP)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_OPENMP -fopenmp")
endif()

option(PROFILE "Whether to enable profiling. " OFF)
if (PROFILE)
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -pg")
endif()

#find_package(hdf5 CONFIG REQUIRED)
#find_package(silo CONFIG REQUIRED)
find_package(PkgConfig REQUIRED)
pkg_check_modules(HDF5 REQUIRED hdf5)
pkg_check_modules(SILO REQUIRED silo)

option(USE_MKL "Whether to use the Intel(R) MKL. " OFF)
option(USE_OPENBLAS "Whether to use the OpenBLAS. " OFF)
if(USE_MKL)
  if(NOT DEFINED MKLROOT)
    if(NOT DEFINED ENV{MKLROOT})
      message(SEND_ERROR "Please set the MKLROOT variable. ")
    endif()
    set(MKLROOT $ENV{MKLROOT})
  endif()
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_MKL -m64 -I${MKLROOT}/include")
elseif(USE_AOCL)
  if(NOT DEFINED AOCL_ROOT)
    if(NOT DEFINED ENV{AOCL_ROOT})
      message(SEND_ERROR "Please set the AOCL_ROOT variable. ")
    endif()
    set(AOCL_ROOT $ENV{AOCL_ROOT})
  endif()
elseif(USE_OPENBLAS)
  find_package(openblas CONFIG REQUIRED)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_OPENBLAS")
else()
#  find_package(PkgConfig REQUIRED)
  pkg_check_modules(BLAS REQUIRED blas)
  pkg_check_modules(CBLAS cblas)
  if(NOT ${BLAS_FOUND} AND NOT ${CBLAS_FOUND})
    message(SEND_ERROR "No BLAS library found. ")
  endif()
  pkg_check_modules(LAPACK REQUIRED lapack)
  pkg_check_modules(LAPACKE REQUIRED lapacke)
endif()

message("System : ${CMAKE_SYSTEM_NAME}")
message("Build type : ${CMAKE_BUILD_TYPE}")
message("CMAKE_CXX_FLAGS : ${CMAKE_CXX_FLAGS}")

set(MAIN_LIB "MultiGrid")
set(COMMON_LIB "${MAIN_LIB}_common")

include_directories(src)
add_subdirectory(src)
# add_subdirectory(example)

add_subdirectory(test)
